{
  "Parameters": {
    "AMIID": {
      "Type": "String"
    },
    "NETWORK": {
      "Type": "String"
    },
    "s3Bucket":{
      "Type": "String"
    },
    "policy": {
      "Type": "String"
    }
  },
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "EC2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Ref": "AMIID"
        },
        "Tags" : [
          {
            "Key" : "cloud-key",
            "Value" : "cloud-value"
          }
        ],
        "InstanceType": "t2.micro",
        "KeyName": "centos",
        "IamInstanceProfile": {
          "Fn::ImportValue": {
            "Fn::Sub": "${policy}-InstanceProfile"
          }
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeType": "gp2",
              "DeleteOnTermination": true,
              "VolumeSize": "20"
            }
          }
        ],
        "UserData" : {
          "Fn::Base64" : {
              "Fn::Join" : [ "\n", [

                "#!/bin/bash -xe",
                "cd /home/centos/tomcat/bin",
                "sudo touch setenv.sh",
                "sudo chmod 777 /home/centos/tomcat/bin/setenv.sh",
                "echo 'JAVA_OPTS=\"-Djava.net.preferIPv4Stack=true -Djava.net.preferIPv4Addresses=true\"' >> setenv.sh",
                "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.profiles.active=prod\"' >> setenv.sh",
                {
                "Fn::Join" : [
                   "",
                   [
                   "echo 'JAVA_OPTS=\"-DBUCKET_NAME=",
                   {
                      "Ref" : "s3Bucket"
                   },
                   ".csye6225.com\"' >> setenv.sh"
                   ]
                ]
                },
                {
                   "Fn::Join" : [
                      "",
                      [
                         "echo 'JAVA_OPTS=\"${JAVA_OPTS} -Dspring.datasource.url=\\\"jdbc:postgresql://",
                         {
                            "Fn::GetAtt" : [
                               "PostGresDB", "Endpoint.Address"	
                            ] 
                         },
                         ":5432/csye6225\\\"\"' >> setenv.sh"
                      ]
                   ]
                },
                "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.username=csye6225master\"' >> setenv.sh",
                "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.password=csye6225password\"' >> setenv.sh",                        
                "cd /home/centos/tomcat/bin/", 
                "./shutdown.sh",
                "./startup.sh",
                "cd",
                "sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/home/centos/tomcat/config-cloudwatch.json -s"
               ] ]
          }
      },
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": true,
            "DeviceIndex": "0",
            "GroupSet": [
              {
                "Ref": "WebSecurityGroup"
              }
            ],
            "SubnetId": {
              "Fn::ImportValue": {
                "Fn::Sub": "${NETWORK}-SubnetID3"
              }
            }
          }
        ]
      }
    },
    "myDBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "description",
        "SubnetIds": [
          {
            "Fn::ImportValue": {
              "Fn::Sub": "${NETWORK}-SubnetID1"
            }
          },
          {
            "Fn::ImportValue": {
              "Fn::Sub": "${NETWORK}-SubnetID2"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "String"
          }
        ]
      }
    },
    "WebSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow http to client host",
        "VpcId": {
          "Fn::ImportValue": {
            "Fn::Sub": "${NETWORK}-VPC"
          }
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 22,
            "ToPort": 22,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 80,
            "ToPort": 80,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 443,
            "ToPort": 443,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 8080,
            "ToPort": 8080,
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "DBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "DeletionPolicy": "Delete",
      "Properties": {
        "GroupDescription": "Allow http to client host",
        "VpcId": {
          "Fn::ImportValue": {
            "Fn::Sub": "${NETWORK}-VPC"
          }
        }
      }
    },
    "DBSecurityGroupIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "DBSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": 5432,
        "ToPort": 5432,
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "WebSecurityGroup",
            "GroupId"
          ]
        }
      }
    },
    "PostGresDB": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": "20",
        "Engine": "postgres",
        "EngineVersion": "10.6",
        "DBInstanceClass": "db.t2.micro",
        "MultiAZ": false,
        "DBInstanceIdentifier": "csye6225-su19",
        "MasterUsername": "csye6225master",
        "MasterUserPassword": "csye6225password",
        "DBSubnetGroupName": {
          "Ref": "myDBSubnetGroup"
        },
        "PubliclyAccessible": true,
        "DBName": "csye6225",
        "VPCSecurityGroups": [
          {
            "Ref": "DBSecurityGroup"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "PostgreSQL Database"
          }
        ]
      },
      "DeletionPolicy": "Delete"
    },
    "DynamoDB": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "csye6225",
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "5",
          "WriteCapacityUnits": "5"
        }
      }
    }
  }
}

